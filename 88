**Задача: Дан массив натуральных чисел. Все числа встречаются четное число раз, кроме одного числа, которое встречается нечетное количество раз. Определить значение этого числа в массиве.**

Для решения задачи о нахождении числа, которое встречается нечетное количество раз в массиве, можно использовать более эффективный подход, чем двойной цикл, который использует O(n^2) времени. Вместо этого мы можем воспользоваться свойством операции XOR, которая позволяет решить задачу за O(n) времени и O(1) дополнительной памяти.

using System;

class GFG

{

`    `public static void Main()

`    `{

`        `int[] arr = { 2, 3, 5, 4, 5, 2, 4, 3, 5, 2, 4, 4, 2 };

`        `int result = FindOddOccurrence(arr);

`        `Console.WriteLine(result);

`    `}

`    `public static int FindOddOccurrence(int[] arr)

`    `{

`        `int result = 0;

`        `foreach (int num in arr)

`        `{

`            `result ^= num; // Применяем XOR

`        `}

`        `return result;

`    `}

}

**Использование XOR:** Операция XOR (исключающее ИЛИ) имеет несколько полезных свойств:

a ^ a = 0 (число XOR с самим собой дает 0)

a ^ 0 = a (число XOR с 0 остается неизменным)

XOR является коммутативным и ассоциативным, что позволяет менять порядок операций.

Благодаря этим свойствам, если мы применим XOR ко всем элементам массива, все числа, которые встречаются четное количество раз, "обнулятся", и в результате останется только число, которое встречается нечетное количество раз.

Сложность алгоритма: Данный алгоритм работает за O(n) времени, где n — количество элементов в массиве, и использует O(1) дополнительной памяти, так как мы храним только одно значение (результат).

Преимущества: Этот подход значительно более эффективен, чем изначальный, так как он избегает вложенных циклов и лишних подсчетов, что делает его подходящим для больших массивов.
